AWSTemplateFormatVersion: 2010-09-09
Parameters:
  Ec2Ami:
    Type: String
    Description: Lista de AMis para utilizar en nuestro despliegue
    Default: ami-03f65b8614a860c29, ami-080f7286ffdf988ee
  SGPort:
    Type: Number
    Default: 80
    Description: Puerto a utilizar en nuestro grupo de seguridad para habilitar trafico http
  NombreDeLLave:
    Description: Nombre de una llave valida para conectarse por ssh o rdp
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  TipoInstancia:
    Description: El tipo de instancia a utilizar.
    Type: String
    Default: t2.micro
    AllowedValues: [t2.nano, t2.micro, t2.small, t2.medium, t2.large, t2.xlarge, t2.2xlarge,
      t3.nano, t3.micro, t3.small, t3.medium, t3.large, t3.xlarge, t3.2xlarge]
    ConstraintDescription: Debe de ser un tipo de instancia valido. Tipo T.
  IPDeIngreso:
    Description: Ip de donde nos prendemos conectar.
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: debe de ser una IP valida con la forma de CIDR x.x.x.x/x.
Resources:
  MyprimeraInstanciaEC2:
    Type: AWS::EC2::Instance
    Properties: 
      ImageId: !Ref Ec2Ami
      KeyName: !Ref NombreDeLLave
      InstanceType: !Ref TipoInstancia
      BlockDeviceMappings: 
      - DeviceName: "/dev/sdm"
        Ebs: 
          VolumeType: "gp3"
          DeleteOnTermination: "true"
          VolumeSize: "10"
      SecurityGroups:
      - !Ref InstanceSecurityGroup
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to client host
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref SGPort
          ToPort: !Ref SGPort
          CidrIp: !Ref IPDeIngreso